@using Front.Models
@model TradeManagementEditVM
<div class="box" id="TradeManagementEditBox">
    <div class="box-header">
        <div class="box-name">
            <i class="fa fa-edit"></i>
            <span>@ViewBag.Title</span>
        </div>
        <div class="box-icons">
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
            <a class="expand-link">
                <i class="fa fa-expand"></i>
            </a>
            <a class="close-link">
                <i class="fa fa-times"></i>
            </a>
        </div>
        <div class="no-move"></div>
    </div>
    <div class="box-content" style="position: relative">
        <form class="form-horizontal" id="newTradeManagementForm">
            <div class="form-group">
                @Html.LabelFor(o => o.CompanyId, "购买方", new { @class = "col-sm-3 control-label", @for = "tradeCompanyId" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(o => o.CompanyId, new SelectList(ViewBag.AllCompanyList, "Id", "Name"), new { @id = "tradeCompanyId", @name = "CompanyId"})
                    @*<input type="hidden" id="tradeCompanyId" />*@
                </div>
                 </div>
            <div class="form-group">
                @Html.LabelFor(o => o.Quantity, "数量", new { @class = "col-sm-3 control-label", @for = "tradeQuantity" })
                <div class="col-sm-9">
                     <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-info-circle"></i>
                        </span>
                    @Html.TextBoxFor(o => o.Quantity, new { @class = "form-control", @id = "tradeQuantity", @name = "Quantity" })
                     </div>
                </div>
            </div>
            @{
                if (ViewBag.PricingType == 1)
                {
                
                <div class="form-group">
                    @Html.LabelFor(o => o.Premium, "升贴水", new { @class = "col-sm-3 control-label", @for = "tradePremium" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(o => o.Premium, new { @class = "form-control", @id = "tradePremium", @name = "Premium", @readonly = "true" })
                    </div>
                    </div>
            <div class="form-group">
                    @Html.LabelFor(o => o.Price, "价格", new { @class = "col-sm-3 control-label", @for = "tradePrice" })
                    <div class="col-sm-9">
                        <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-info-circle"></i>
                        </span>
                        @Html.TextBoxFor(o => o.Price, new { @class = "form-control", @id = "tradePrice", @name = "Price", @readonly = "true" })
                            </div>
                    </div>
                </div>
                }
            }
            <div class="form-group">
                @Html.LabelFor(o => o.Price, "最终价格", new { @class = "col-sm-3 control-label", @for = "tradeFinalPrice" })
                <div class="col-sm-9">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-info-circle"></i>
                        </span>
                    @Html.TextBoxFor(o => o.Price, new { @class = "form-control", @id = "tradeFinalPrice", @name = "FinalPrice", @readonly = "true", @visibly = "hidden" })
                        </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(o => o.CommodityName, "金属", new { @class = "col-sm-3 control-label", @for = "tradeCommodityName" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(o => o.CommodityName, new { @class = "form-control", @id = "tradeCommodityName", @name = "CommodityName", @readonly = "true" })
                </div>
                </div>
            <div class="form-group">
                @Html.LabelFor(o => o.CommodityTypeName, "类型", new { @class = "col-sm-3 control-label", @for = "tradeCommodityTypeName" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(o => o.CommodityTypeName, new { @class = "form-control", @id = "tradeCommodityTypeName", @name = "CommodityTypeName", @readonly = "true" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(o => o.BrandName, "品牌", new { @class = "col-sm-3 control-label", @for = "tradeBrandName" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(o => o.BrandName, new { @class = "form-control", @id = "tradeBrandName", @name = "BrandName", @readonly = "true" })
                </div>
                 </div>
            <div class="form-group">
                @Html.LabelFor(o => o.Warehouse, "仓库", new { @class = "col-sm-3 control-label", @for = "tradeWarehouseName" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(o => o.Warehouse, new { @class = "form-control", @id = "tradeWarehouseName", @name = "Warehouse", @readonly = "true" })
                </div>
            </div>
            <div class="form-group">
                <div class="text-center">
                    <button class="btn btn-primary btn-label-left" id="addBrandBtn"  type="submit">
                        <span><i class="fa fa-clock-o"></i></span>确定
                    </button>
                    @*<div class="col-sm-offset-2 col-sm-2">*@
                   @* <button class="btn btn-default btn-label-left" onclick="javascript:ClosePage();">
                        <span>
                            <i class="fa fa-clock-o txt-danger"></i>
                        </span>
                        取消
                    </button>*@
                    @Html.HiddenFor(o => o.PricingType, new { @id = "PricingTypeField" })
                    @Html.HiddenFor(o => o.StockId, new { @id = "StockIdField" })
                    @Html.HiddenFor(o => o.SalerName, new { @id = "SalerNameField" })
                    @Html.HiddenFor(o => o.CountDown, new { @id = "CountDownField" })
                    @Html.HiddenFor(o => o.CommodityId, new { @id = "CommodityIdField" })
                    @Html.HiddenFor(o => o.CommodityCode, new { @id = "CommodityCodeField" })
                    @Html.HiddenFor(o => o.CommodityUnit, new { @id = "CommodityUnitField" })
                </div>
            </div>
        </form>
    </div>
</div>
<script>
    var index;
    var timer;
    var bar;
    var countDown;
    var dropWidth;
    var alertBox;
    var totalWidth;
    //var strongBar;
    var obj = new SalesOrder();
    function SalesOrder(buyerName, salerName, finalPrice, pricingType, txtP, qty, brand, commodityType, warehouse, premium, commodity, stockId, companyId, pricingType, commodityId, commodityUnit) {
        this.buyerName = buyerName;
        this.salerName = salerName;
        this.finalPrice = finalPrice;
        this.pricingType = pricingType;
        this.txtP = txtP;
        this.qty = qty;
        this.brand = brand;
        this.commodityType = commodityType;
        this.warehouse = warehouse;
        this.commodity = commodity;
        this.stockId = stockId;
        this.companyId = companyId;
        this.premium = premium;
        this.pricingType = pricingType;
        this.commodityId = commodityId;
        this.commodityUnit = commodityUnit;
    }

    function showalert() {
        //var id = document.getElementById("tradeCompanyId").value;
        var id = $("#tradeCompanyId").val();

         $.ajax({
             url: "/TradeManagement/GetBuyerName/" + id,
            dataType: 'json',
            type: 'Get',
            success: function (data) {
                countDown = $("#CountDownField").val();
                obj.buyerName = data.name;
                obj.companyId = id
                obj.salerName = $("#SalerNameField").val();
                obj.stockId = $("#StockIdField").val();
                obj.commodityId = $("#CommodityIdField").val();
                obj.commodityUnit = $("#CommodityUnitField").val();
                obj.finalPrice = document.getElementById("tradeFinalPrice").value;
                var pricingType = $("#PricingTypeField").val();
                obj.pricingType = pricingType;
                var txt;
                if (pricingType == 1) {
                    var permium =document.getElementById("tradePremium").value;
                    var price = document.getElementById("tradePrice").value;
                    obj.premium = permium;
                    txt = "（升贴水" + permium + " + " + "即时卖价" + price + "）";
                }
                else { txt = ""; }
                obj.txtP = txt;
                obj.qty = document.getElementById("tradeQuantity").value;
                obj.brand = document.getElementById("tradeBrandName").value;
                obj.commodityType = document.getElementById("tradeCommodityTypeName").value;
                obj.warehouse = document.getElementById("tradeWarehouseName").value;
                //alert(obj.buyerName);
                index = $.layer({
                    type: 1,
                    shadeClose: false,
                    title: false,
                    shade: [0.1, '#fff'],
                    area: ['600px', "262px"],
                    offset: [($(window).height() -250) / 2 + 'px', ''],
                    page: { dom: "#alertBoxForMakeSureOrder" },
                    success: function (layero) {
                        document.getElementById("spanBuyer").innerHTML = obj.buyerName;
                        document.getElementById("salerSpan").innerHTML = obj.salerName;
                        document.getElementById("finalPriceSpan").innerHTML = obj.finalPrice;
                        document.getElementById("txtSpan").innerHTML = obj.txtP;
                        document.getElementById("qtySpan").innerHTML = obj.qty;
                        document.getElementById("commodityTypeSpan").innerHTML = obj.commodityType;
                        document.getElementById("brandSpan").innerHTML = obj.brand;
                        document.getElementById("warehouseSpan").innerHTML = obj.warehouse;
                        document.getElementById("mmSpan").innerHTML = countDown;
                        document.getElementById("commUnit").innerHTML = obj.commodityUnit;
                        timer = setInterval("setTime()", 1000);
                        alertBox = document.getElementById("msgBoxDiv");
                        var backBox = document.getElementById("time_back");
                        var barBox = document.getElementById("time_bar");
                        totalWidth = alertBox.offsetWidth * (100 / countDown);
                        //backBox.style.width = alertBox.offsetWidth * countDown / 100 + "px";
                        //barBox.style.width = alertBox.offsetWidth * countDown / 100 + "px";
                        backBox.style.width = totalWidth * countDown / 100 + "px";
                        barBox.style.width = totalWidth * countDown / 100 + "px";
                    },
                    close: function (index) {
                        clearInterval(timer);
                        layer.close(index);
                        document.getElementById("addBrandBtn").disabled = false;
                    }

                });
            }
         });       
    }

    function setTime()
    {
        var time = document.getElementById("mmSpan").innerHTML;
        if (time > 0) {
            var resultTime = time - 1;
            if (resultTime < 10)
            {
                resultTime = "0" + resultTime;
            }
            document.getElementById("mmSpan").innerHTML = resultTime;
            changebar("#time_bar", resultTime);
        }
        else {
            clearInterval(timer);
            layer.close(index);
            document.getElementById("addBrandBtn").disabled = false;
        }
    }


    function changebar(obj, rate) {
        //var widthRate = alertBox.offsetWidth * rate / 100 + "px";
        var widthRate = totalWidth * rate / 100 + "px";
       $(obj).animate({ width: widthRate }, 1000);
       $(obj).html(rate);
    }

    function ClosePage()
    {
        $('#TradeManagementEditBox').remove();            
    }
 
    function getPriceInit()
    {
        if ($("#PricingTypeField").val() == 1) {
            var commCode = $("#CommodityCodeField").val();
            var divID = "price" + commCode;
            var commDiv = document.getElementById(divID);
            if (commDiv != null) {
                var priceDiv = commDiv.getElementsByClassName("priceSaleP");
                var priceTxt = document.getElementById("tradePrice");
                var finalPriceTxt = document.getElementById("tradeFinalPrice");
                var tradePremiumTxt = document.getElementById("tradePremium");
                if (priceDiv != null) {
                    //debugger
                    priceTxt.value = priceDiv[0].innerHTML;
                    finalPriceTxt.value = parseFloat(priceTxt.value) + parseFloat(tradePremiumTxt.value);
                }
            }
        }
    }

    $(document).ready(function () {

        $("#tradeCompanyId").select2();       
   
        $('#newTradeManagementForm').bootstrapValidator({
            message: "输入有误",
            live: 'enabled',
            trigger: null,
           
            fields: {
                Quantity: {
                    trigger: "blur",
                    validators: {
                        notEmpty: {
                            message: "数量不能为空"
                        },
                        remote: {
                            url: '/TradeManagement/ValidateQty',
                            message: "只能输入正整数",
                        }
                    }
                },
                Price: {
                    trigger: "blur",
                    validators: {
                        notEmpty: {
                            message: "价格不能为空"
                        },
                        remote:
                            {
                                url: '/TradeManagement/ValidatePrice',
                                message:"请F5刷新当前页面或退出系统后重新登录" //价格格式不正确的提示信息 message
                            }
                    }
                }
            },
            submitHandler: function (validator, form, submitButton) {
                showalert();
            }
        });
        $("#divMakeSureOrderOK").unbind("click");
        $("#divMakeSureOrderOK").click(function () {
            clearInterval(timer);
            layer.close(index);
            $.ajax({
                url: "/TradeManagement/Create",
                data: { companyId: obj.companyId, qty: obj.qty, premium: obj.premium, price: obj.finalPrice, stockId: obj.stockId, commodityId: obj.commodityId, pricingType: obj.pricingType },
                dataType: 'json',
                type: 'POST',
                success: function (data) {
                    $.procAjaxData(data, function () {
                        //clearInterval(timer);
                        //layer.close(index);
                        $('#TradeManagementEditBox').remove();
                        demo.server.frontend_UpdateStock(obj.stockId, obj.qty);
                        demo.server.backend_PlusSalesOrder(obj.buyerName, obj.salerName, obj.qty, obj.commodityType, obj.brand, obj.warehouse, obj.finalPrice); //todo
                    }, function () {
                        document.getElementById("addBrandBtn").disabled = false;
                    });
                }
            });
        });

        $("#divMakeSureOrderCancel").unbind("click");
        $("#divMakeSureOrderCancel").click(function () {
            clearInterval(timer);
            layer.close(index);
            var id = $("#StockIdField").val();
            document.getElementById("addBrandBtn").disabled = false;
        });

        getPriceInit();
        WinMove();
    });
</script>
